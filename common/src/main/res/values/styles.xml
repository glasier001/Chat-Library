<resources>

    // sagar : 17/1/19 8:05 PM We may have to define app style here also because our custom view classes
    from base lib may not access app module resources. And that is the reason,
    we also have to define resources of app module in base lib. Though, not sure.

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar.Bridge">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorAccent</item>
        <item name="colorPrimaryDark">@color/colorAccent</item>
        <item name="colorAccent">@color/colorAccent</item>


        <!-- Customize your theme here. -->

        <item name="windowActionBar">false</item>
        <item name="windowActionBarOverlay">true</item>
        <item name="windowNoTitle">true</item>
        <item name="android:windowBackground">@drawable/gradient_square</item>
        <!--<item name="android:homeAsUpIndicator">@drawable/back_arrow</item>-->
        <item name="android:textAllCaps">false</item>

        <!--<item name="android:editTextStyle">@style/EditTextStyle</item>-->

        <!-- Hides the shadow below the actionbar -->
        <item name="android:windowContentOverlay">@null</item>
        <!--<item name="preferenceTheme">@style/PreferenceThemeOverlay.v14.Material</item>-->

    </style>

    <style name="Theme.AppCompat.Light.NoActionBar.FullScreen" parent="@style/Theme.AppCompat.Light.NoActionBar">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowActionBar">false</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowContentOverlay">@null</item>
    </style>

    <style name="Theme.Transparent" parent="AppTheme">
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <style name="AppAlertTheme" parent="Theme.AppCompat.Light.Dialog">
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:textColorPrimary">@color/colorTransparent</item>
        <item name="android:background">@android:color/white</item>
        <item name="android:windowBackground">@color/colorTransparent</item>
        <item name="android:popupBackground">@null</item>
    </style>

    <style name="MyDialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowTitleStyle">@null</item>
        <item name="android:windowSoftInputMode">stateUnspecified|adjustPan</item>
        <item name="android:backgroundDimEnabled">true</item>
        <item name="android:background">@android:color/transparent</item>
    </style>

    <style name="AppAlertTheme19" parent="Theme.AppCompat.Light.Dialog">
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:textColorPrimary">@color/colorTransparent</item>
        <item name="android:background">@color/colorTransparent</item>
        <item name="android:windowBackground">@color/colorTransparent</item>
        <item name="android:popupBackground">@null</item>
    </style>


    //TODO This style will be different for M, L and Pre-L


    <style name="Animations" />

    <style name="Animations.SlideWindow">
        <item name="android:windowEnterAnimation">@anim/slide_up</item>
        <item name="android:windowExitAnimation">@anim/slide_down</item>
    </style>


    <!--////////////////////Alerter Toast Style///////////////////////////////-->
    <style name="AlertStyle" parent="@android:style/Widget">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:minHeight">@dimen/alerter_alert_min_height</item>
        <item name="android:maxHeight">@dimen/alerter_alert_max_height</item>
        <item name="android:clickable">true</item>
        <item name="android:gravity">top</item>
        <item name="android:paddingTop">@dimen/alerter_alert_padding</item>
    </style>

    <style name="AlertTextAppearance">
        <item name="android:textColor">@color/alert_default_text_color</item>
    </style>

    <style name="AlertTextAppearance.Text">
        <item name="android:textSize">@dimen/alerter_text_small</item>
    </style>

    <style name="AlertTextAppearance.Title">
        <item name="android:textSize">@dimen/alerter_text_medium</item>
        <item name="android:textStyle">bold</item>
    </style>

    <style name="AlertTheme" parent="Base.Theme.AppCompat">
        <item name="alertStyle">@style/AlertStyle</item>
    </style>

    <style name="CustomDialog" parent="@android:style/Theme.Dialog" >
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowBackground">@null</item>
        <item name="android:background">@android:color/transparent</item>
    </style>

    <style name="CustomDialogNoActionBar" parent="Theme.AppCompat.Light.NoActionBar" >
        <item name="android:windowBackground">@color/white</item>
        <item name="android:windowIsFloating">true</item>
    </style>

    <style name="DialogNoDimBg" parent="@android:style/Theme.Panel" >
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <style name="CustomDialogWbgNull" parent="@android:style/Theme.Holo.Light" >
        <item name="android:windowBackground">@null</item>
        <item name="android:windowIsFloating">true</item>
    </style>

    <!--/////////////////////////////////////////////////////////////////////-->



</resources>

